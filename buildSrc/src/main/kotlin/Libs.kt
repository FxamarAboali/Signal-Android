import kotlin.String

/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {
  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val annotation: String = "androidx.annotation:annotation:" + Versions.annotation

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

  const val camera_camera2: String = "androidx.camera:camera-camera2:" + Versions.androidx_camera

  const val camera_core: String = "androidx.camera:camera-core:" + Versions.androidx_camera

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val cardview: String = "androidx.cardview:cardview:" + Versions.cardview

  /**
   * http://tools.android.com
   */
  const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
      Versions.constraintlayout

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val exifinterface: String = "androidx.exifinterface:exifinterface:" + Versions.exifinterface

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val gridlayout: String = "androidx.gridlayout:gridlayout:" + Versions.gridlayout

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val legacy_preference_v14: String = "androidx.legacy:legacy-preference-v14:" +
      Versions.androidx_legacy

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val legacy_support_v13: String = "androidx.legacy:legacy-support-v13:" +
      Versions.androidx_legacy

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val lifecycle_common_java8: String = "androidx.lifecycle:lifecycle-common-java8:" +
      Versions.androidx_lifecycle

  /**
   * https://developer.android.com/topic/libraries/architecture/index.html
   */
  const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
      Versions.androidx_lifecycle

  const val multidex_instrumentation: String = "androidx.multidex:multidex-instrumentation:" +
      Versions.multidex_instrumentation

  const val multidex: String = "androidx.multidex:multidex:" + Versions.multidex

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val preference: String = "androidx.preference:preference:" + Versions.preference

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

  /**
   * https://developer.android.com/testing
   */
  const val androidx_test_core: String = "androidx.test:core:" + Versions.androidx_test_core

  const val numberpickerview: String = "cn.carbswang.android:NumberPickerView:" +
      Versions.numberpickerview

  const val com_amulyakhare_textdrawable: String = "com.amulyakhare:com.amulyakhare.textdrawable:" +
      Versions.com_amulyakhare_textdrawable

  /**
   * https://developer.android.com/studio
   */
  const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

  /**
   * https://developer.android.com/studio
   */
  const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
      Versions.com_android_tools_build_gradle

  /**
   * https://developer.android.com/studio
   */
  const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

  /**
   * https://github.com/aNNiMON/Lightweight-Stream-API
   */
  const val stream: String = "com.annimon:stream:" + Versions.stream

  /**
   * https://github.com/Codewaves/Sticky-Header-Grid
   */
  const val stickyheadergrid: String = "com.codewaves.stickyheadergrid:stickyheadergrid:" +
      Versions.stickyheadergrid

  /**
   * https://github.com/davemorrissey/subsampling-scale-image-view
   */
  const val subsampling_scale_image_view: String =
      "com.davemorrissey.labs:subsampling-scale-image-view:" + Versions.subsampling_scale_image_view

  /**
   * https://github.com/bumptech/glide
   */
  const val com_github_bumptech_glide_compiler: String = "com.github.bumptech.glide:compiler:" +
      Versions.com_github_bumptech_glide

  /**
   * https://github.com/bumptech/glide
   */
  const val glide: String = "com.github.bumptech.glide:glide:" + Versions.com_github_bumptech_glide

  const val photoview: String = "com.github.chrisbanes:PhotoView:" + Versions.photoview

  /**
   * https://github.com/dmytrodanylyk/circular-progress-button
   */
  const val com_github_dmytrodanylyk_circular_progress_button_library: String =
      "com.github.dmytrodanylyk.circular-progress-button:library:" +
      Versions.com_github_dmytrodanylyk_circular_progress_button_library

  const val exoplayer_core: String = "com.google.android.exoplayer:exoplayer-core:" +
      Versions.com_google_android_exoplayer

  const val exoplayer_ui: String = "com.google.android.exoplayer:exoplayer-ui:" +
      Versions.com_google_android_exoplayer

  const val play_services_auth: String = "com.google.android.gms:play-services-auth:" +
      Versions.play_services_auth

  const val play_services_location: String = "com.google.android.gms:play-services-location:" +
      Versions.play_services_location

  const val play_services_maps: String = "com.google.android.gms:play-services-maps:" +
      Versions.play_services_maps

  /**
   * http://developer.android.com/tools/extras/support-library.html
   */
  const val material: String = "com.google.android.material:material:" + Versions.material

  /**
   * http://code.google.com/p/dexmaker
   */
  const val dexmaker_mockito: String = "com.google.dexmaker:dexmaker-mockito:" +
      Versions.com_google_dexmaker

  /**
   * http://code.google.com/p/dexmaker
   */
  const val dexmaker: String = "com.google.dexmaker:dexmaker:" + Versions.com_google_dexmaker

  const val firebase_messaging: String = "com.google.firebase:firebase-messaging:" +
      Versions.firebase_messaging

  /**
   * https://github.com/zxing/zxing
   */
  const val android_integration: String = "com.google.zxing:android-integration:" +
      Versions.android_integration

  /**
   * https://github.com/zxing/zxing
   */
  const val com_google_zxing_core: String = "com.google.zxing:core:" +
      Versions.com_google_zxing_core

  /**
   * http://github.com/mangstadt/ez-vcard
   */
  const val ez_vcard: String = "com.googlecode.ez-vcard:ez-vcard:" + Versions.ez_vcard

  /**
   * https://github.com/jpardogo/PagerSlidingTabStrip
   */
  const val com_jpardogo_materialtabstrip_library: String =
      "com.jpardogo.materialtabstrip:library:" + Versions.com_jpardogo_materialtabstrip_library

  /**
   * https://github.com/klinker41/android-smsmms
   */
  const val android_smsmms: String = "com.klinkerapps:android-smsmms:" + Versions.android_smsmms

  /**
   * https://github.com/vinc3m1/RoundedImageView
   */
  const val roundedimageview: String = "com.makeramen:roundedimageview:" + Versions.roundedimageview

  /**
   * https://github.com/makovkastar/FloatingActionButton
   */
  const val floatingactionbutton: String = "com.melnykov:floatingactionbutton:" +
      Versions.floatingactionbutton

  /**
   * https://github.com/pnikosis/materialish-progress
   */
  const val materialish_progress: String = "com.pnikosis:materialish-progress:" +
      Versions.materialish_progress

  /**
   * http://github.com/square/assertj-android/
   */
  const val assertj_android: String = "com.squareup.assertj:assertj-android:" +
      Versions.assertj_android

  /**
   * https://github.com/Gericop/ColorPicker
   */
  const val colorpicker: String = "com.takisoft.fix:colorpicker:" + Versions.colorpicker

  const val android_image_cropper: String = "com.theartofdev.edmodo:android-image-cropper:" +
      Versions.android_image_cropper

  /**
   * https://github.com/tomergoldst/tooltips
   */
  const val tooltips: String = "com.tomergoldst.android:tooltips:" + Versions.tooltips

  const val de_fayard_buildsrcversions_gradle_plugin: String =
      "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
      Versions.de_fayard_buildsrcversions_gradle_plugin

  /**
   * http://junit.org
   */
  const val junit: String = "junit:junit:" + Versions.junit

  const val shortcutbadger: String = "me.leolin:ShortcutBadger:" + Versions.shortcutbadger

  /**
   * https://github.com/svenwiegand/time-duration-picker
   */
  const val time_duration_picker: String = "mobi.upod:time-duration-picker:" +
      Versions.time_duration_picker

  /**
   * http://hc.apache.org/httpcomponents-client/
   */
  const val httpclient_android: String = "org.apache.httpcomponents:httpclient-android:" +
      Versions.httpclient_android

  /**
   * http://assertj.org
   */
  const val assertj_core: String = "org.assertj:assertj-core:" + Versions.assertj_core

  /**
   * https://conscrypt.org/
   */
  const val conscrypt_android: String = "org.conscrypt:conscrypt-android:" +
      Versions.conscrypt_android

  /**
   * http://greenrobot.org/eventbus/
   */
  const val eventbus: String = "org.greenrobot:eventbus:" + Versions.eventbus

  /**
   * https://github.com/mockito/mockito
   */
  const val mockito_core: String = "org.mockito:mockito-core:" + Versions.mockito_core

  /**
   * http://www.powermock.org
   */
  const val powermock_api_mockito: String = "org.powermock:powermock-api-mockito:" +
      Versions.org_powermock

  /**
   * http://www.powermock.org
   */
  const val powermock_classloading_xstream: String =
      "org.powermock:powermock-classloading-xstream:" + Versions.org_powermock

  /**
   * http://www.powermock.org
   */
  const val powermock_module_junit4_rule: String = "org.powermock:powermock-module-junit4-rule:" +
      Versions.org_powermock

  /**
   * http://www.powermock.org
   */
  const val powermock_module_junit4: String = "org.powermock:powermock-module-junit4:" +
      Versions.org_powermock

  /**
   * http://robolectric.org
   */
  const val robolectric: String = "org.robolectric:robolectric:" + Versions.org_robolectric

  /**
   * http://robolectric.org
   */
  const val shadows_multidex: String = "org.robolectric:shadows-multidex:" +
      Versions.org_robolectric

  /**
   * https://github.com/signalapp/AES-GCM-Provider
   */
  const val aesgcmprovider: String = "org.signal:aesgcmprovider:" + Versions.aesgcmprovider

  const val android_database_sqlcipher: String = "org.signal:android-database-sqlcipher:" +
      Versions.android_database_sqlcipher

  /**
   * https://github.com/WhisperSystems/libsignal-service-java
   */
  const val signal_service_android: String = "org.whispersystems:signal-service-android:" +
      Versions.signal_service_android

  /**
   * https://github.com/WhisperSystems/libwebrtc-android
   */
  const val webrtc_android: String = "org.whispersystems:webrtc-android:" + Versions.webrtc_android

  /**
   * https://github.com/tajchert/WaitingDots
   */
  const val waitingdots: String = "pl.tajchert:waitingdots:" + Versions.waitingdots

  /**
   * https://github.com/emilsjolander/StickyListHeaders
   */
  const val stickylistheaders: String = "se.emilsjolander:stickylistheaders:" +
      Versions.stickylistheaders
}
